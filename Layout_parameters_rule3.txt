//This work has been done by 
//Gwendolyn Rippberger, Florian Ganglberger and Katja Bühler
//VRVis Zentrum für Virtual Reality und Visualisierung Forschungs-GmbH 
//February 2019

//Parametrization of the anatomical layout used to create the right figure accompanying rule 3. 
//The images have been created using the cytoscape.js implementation f the CoSE Algorithm 
//Connection weights for anatomical layout have been normalized in respect to the maximum weight from the normalized anatomic connections
//After the layouting is done, only node positions from the anatomical layout are kept, anatomical edges are discarded and replaced by the edges of a functional brain network.  
//


Fullbrain: Nodes:78 Edges:1464
Halfbrain: Nodes:38 Edges:508
Layouting-Algorithm: Cose
given those parameters
{
                name: 'cose',

                // Called on `layoutready`
                ready: function () {
                },

                // Called on `layoutstop`
                stop: function () {
                },

                // Whether to animate while running the layout
                // true : Animate continuously as the layout is running
                // false : Just show the end result
                // 'end' : Animate with the end result, from the initial positions to the end positions
                animate: false,

                // Easing of the animation for animate:'end'
                animationEasing: undefined,

                // The duration of the animation for animate:'end'
                animationDuration: undefined,

                // A function that determines whether the node should be animated
                // All nodes animated by default on animate enabled
                // Non-animated nodes are positioned immediately when the layout starts
                animateFilter: function (node, i) {
                    return true;
                },


                // The layout animates only after this many milliseconds for animate:true
                // (prevents flashing on fast runs)
                animationThreshold: 250,

                // Number of iterations between consecutive screen positions update
                refresh: 20,

                // Whether to fit the network view after when done
                fit: true,

                // Padding on fit
                padding: 30,

                // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
                boundingBox: undefined,

                // Excludes the label when calculating node bounding boxes for the layout algorithm
                nodeDimensionsIncludeLabels: false,

                // Randomize the initial positions of the nodes (true) or use existing positions (false)
                randomize: false,

                // Extra spacing between components in non-compound graphs
                componentSpacing: 100,

                // Node repulsion (non overlapping) multiplier
                nodeRepulsion: function (node) {
                    return 2048;
                },

                // Node repulsion (overlapping) multiplier
                nodeOverlap: 4,

                // Ideal edge (non nested) length
                idealEdgeLength: function (edge) {
                    return 200;
                },

                // Divisor to compute edge forces
                edgeElasticity: function (edge) {
                    return 3000;
                },

                // Nesting factor (multiplier) to compute ideal edge length for nested edges
                nestingFactor: 1.2,

                // Gravity force (constant)
                gravity: 1,

                // Maximum number of iterations to perform
                numIter: 1000,

                // Initial temperature (maximum node displacement)
                initialTemp: 1000,

                // Cooling factor (how the temperature is reduced between consecutive iterations
                coolingFactor: 0.99,

                // Lower temperature threshold (below this point the layout will end)
                minTemp: 1.0,

                // Pass a reference to weaver to use threads for calculations
                weaver: false
            };



